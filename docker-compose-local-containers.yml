services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "3333:3333"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/staticfiles:ro
    depends_on:
      - django

  django:
    build:
      context: .
      dockerfile: dockerfile
    container_name: django
    ports:
      - "8000:8000"
      - "5678:5678"
    environment:
      - DEBUG_MODE=True
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    volumes:
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy

    # command: gunicorn website.wsgi:application \
    #           --bind 0.0.0.0:8000 \
    #           --workers 3 \
    #           --access-logfile - \
    #           --error-logfile - \
    #           --log-level info 

    # command: gunicorn --config python:debug debug:application --bind 0.0.0.0:8000 --workers 1
      # NEEDS A DEBUG.PY FILE!!!!!!!!
      # For instance:
      #   import os
      #   from django.core.wsgi import get_wsgi_application
      #   os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'website.settings')
      #   application = get_wsgi_application()

    # command: python manage.py runserver 0.0.0.0:8000
    command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client manage.py runserver 0.0.0.0:8000

  db:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
    expose:
      - 5432
    ports:
      - 35432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres_data:
  static_volume:
    driver: local
